<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

	<session-factory>

		<!-- 数据库连接配置 -->
		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="connection.url">jdbc:mysql://localhost:3306/jwang</property>
		<property name="connection.username">root</property>
		<property name="connection.password">root</property>

		<!-- 数据库方言，指定使用的数据库 -->
		<property name="dialect">org.hibernate.dialect.MySQL55Dialect</property>

		<!-- show_sql: 操作数据库时,会 向控制台打印sql语句 -->
		<property name="show_sql">true</property>
		<!-- format_sql: 打印sql语句前,会将sql语句先格式化 -->
		<property name="format_sql">true</property>
		<!-- update(最常用的取值): 如果当前数据库中不存在表结构,那么自动创建表结构. 如果存在表结构,并且表结构与实体一致,那么不做修改 
			如果存在表结构,并且表结构与实体不一致,那么会修改表结构.会保留原有列. 
			create(很少):无论是否存在表结构.每次启动Hibernate都会重新创建表结构.(数据会丢失) 
			create-drop(极少): 无论是否存在表结构.每次启动Hibernate都会重新创建表结构.每次Hibernate运行结束时,删除表结构. 
			validate(很少):不会自动创建表结构.也不会自动维护表结构.Hibernate只校验表结构. 如果表结构不一致将会抛出异常. -->
		<property name="hbm2ddl.auto">update</property>
		
		<!-- 将Session与线程绑定=> 只有配置了该配置,才能使用getCurrentSession -->
		<property name="hibernate.current_session_context_class">thread</property>
		
		<!-- 开启二级缓存 -->
		<property name="hibernate.cache.use_second_level_cache">true</property>
		<!-- 二级缓存的提供类 在hibernate4.0版本以后我们都是配置这个属性来指定二级缓存的提供类-->
		<property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</property>
		<!-- 二级缓存配置文件的位置 -->
		<property name="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</property>
		
		<!-- 开启查询缓存 -->
		<property name="hibernate.cache.use_query_cache">true</property>

		<!-- 配置映射类路径 -->
		<mapping class="cn.edu.ccut.bo.Blog" />

	</session-factory>

</hibernate-configuration>